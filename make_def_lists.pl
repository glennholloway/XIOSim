#!/usr/bin/perl

%comps = ();
$comps{"fetch"}  = "ZPIPE-fetch";
$comps{"decode"}  = "ZPIPE-decode";
$comps{"alloc"}  = "ZPIPE-alloc";
$comps{"exec"}  = "ZPIPE-exec";
$comps{"commit"}  = "ZPIPE-commit";

$comps{"bpred"}  = "ZCOMPS-bpred,ZCOMPS-fusion,ZCOMPS-btb,ZCOMPS-ras";
$comps{"memdep"}  = "ZCOMPS-memdep";
$comps{"prefetch"}  = "ZCOMPS-prefetch";
$comps{"dram"}  = "ZCOMPS-dram";
$comps{"MC"}  = "ZCOMPS-MC";

$comps{"power"} = "ZCORE-power";
$comps{"coherence"} = "ZCOMPS-coherence";
$comps{"repeater"} = "ZCOMPS-repeater";
$comps{"dvfs"} = "ZCOMPS-dvfs";

$component = $ARGV[0];

unless(defined $component) { die "must specify a component name"; }
unless(defined $comps{$component}) { die "unknown component name: $component"; }

sub is_folder_empty {
    my $dirname = shift;
    opendir(my $dh, $dirname) or die "Not a directory";
    return scalar(grep { $_ ne "." && $_ ne ".." } readdir($dh)) == 0;
}

@comp_list = split(',',$comps{$component});

while($comp = shift @comp_list)
{
  $comp_age = -M $pref.".list";
  $dir_age = -M $comp;

  if(-e $comp."-list.h" and $dir_age < $comp_age)
  {
    # object file has been made since directory modified
    print "Skipping $comp.list\n";
    next;
  }

  print "Generating $comp.list\n";

  $files = `ls -1 $comp/*.c*`;
  @files = split(/\s/,$files);

  unless (open (OUTF,">$comp.list"))
    { die "couldn't write to $comp.list"; }

  print OUTF "/* DO NOT EDIT THIS FILE.  This file was automatically\n";
  print OUTF "   generated by make_def_lists.pl. */\n\n";

  foreach $file (@files)
  {
    if($comp eq "ZCOMPS-MC" and $file eq "ZCOMPS-MC/MC-dramsim.cpp" and is_folder_empty("DRAMSim2"))
    {
      next;
    }

    if($comp eq "ZCOMPS-repeater" and $file eq "ZCOMPS-repeater/repeater-default.cpp" and is_folder_empty("mem-repeater"))
    {
      next;
    }

    print OUTF "#include \"$file\"\n";
  }

  close OUTF;

}
